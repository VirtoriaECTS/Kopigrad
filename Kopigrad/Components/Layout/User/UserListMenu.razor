@inject NavigationManager Navigation
@rendermode InteractiveServer

<link rel="stylesheet" href="/menuusers.css">
<!-- Гамбургер кнопка -->
<div class="HamburgerBtn" @onclick="ToggleMenu" aria-label="Toggle menu" role="button" tabindex="0">
    <div></div>
    <div></div>
    <div></div>
</div>

<!-- Сайдбар меню -->
<div class="SidebarMenu @(isMenuOpen ? "active" : "")">
    <div class="TextContainerMenuAdmin">
        @foreach (var svc in services)
        {
            <h5 @onclick="() => OnMenuClick(svc.IdService)" class="TextMenuUser">
                @svc.NameService
            </h5>
        }
    </div>
</div>

<!-- Подложка для закрытия меню при клике вне -->
<div class="Overlay @(isMenuOpen ? "active" : "")" @onclick="ToggleMenu"></div>

<!-- Обычное меню для ПК -->
<div class="Vertical">
    <div class="TextContainerMenuAdmin">
        @foreach (var svc in firstHalf)
        {
            <div @onclick="() => ClickService(svc.IdService)" class="TextMenuUser2">
                @svc.NameService
            </div>
        }
    </div>

    <div class="TextContainerMenuAdmin">
        @foreach (var svc in secondHalf)
        {
            <div @onclick="() => ClickService(svc.IdService)" class="TextMenuUser2">
                @svc.NameService
            </div>
        }
    </div>
</div>



@code {
    private List<Models.Service> services = new();
    private List<Models.Service> firstHalf = new();
    private List<Models.Service> secondHalf = new();

    private void OnSelectChange(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int idService))
        {
            Navigation.NavigateTo($"/InfoService/{idService}");
        }
    }

    private bool isMenuOpen = false;

    private void ToggleMenu()
    {
        isMenuOpen = !isMenuOpen;
    }

    private void OnMenuClick(int idService)
    {
        isMenuOpen = false; // Закрываем меню после выбора
        Navigation.NavigateTo($"/InfoService/{idService}");
    }



    protected override void OnInitialized()
    {
        using var context = new Models.KopigradContext();

        // 1) Сначала отсортируем все services по IdService для предсказуемого порядка
         services = context.Services
                          .OrderBy(s => s.IdService)
                          .ToList();

        // 2) Разбиваем на две половины
        int mid = services.Count / 2;
        firstHalf = services.Take(mid).ToList();
        secondHalf = services.Skip(mid).ToList();
    }

    private void ClickService(int idService)
    {
        Navigation.NavigateTo($"/InfoService/{idService}");
    }
}
