@page "/Admin"
@page "/Admin/{ReturnUrl?}"
@layout Layout.Menu.MenuAdminVhod
@rendermode InteractiveServer

@using Microsoft.AspNetCore.Components
@inject NavigationManager Navigation
@inject Classes.Autorisation.AutorisationClasses AuthService

<PageTitle>Admin</PageTitle>

<div class="Banner">
    <h5 class="TextBanner">Панель админа</h5>
</div>

<div class="VhodAdmin">
    <h5 class="TextVhodAdmin">Email:</h5>
    <input type="email" @bind="email" class="InputAdmin" />
    <h5 class="TextVhodAdmin">Пароль:</h5>
    <input type="password" @bind="password" class="InputAdmin" />
    <button @onclick="OnClickVhod" class="BittonAdminVhod">Войти</button>
    <a href="/Register" class="TextFindPassword">Зарегистрироваться</a>
    <h5 class="TextFindPassword">Забыли пароль</h5>
    <h2 class="TextFindPassword" style="color: red">@error</h2>
</div>

@code {
    [Parameter] public string? ReturnUrl { get; set; }
    private string error = "";
    private string email = "";
    private string password = "";

    private void OnClickVhod()
    {
        // 1) Локально проверяем пароль через AuthService
        string checkResult = AuthService.CheakPassword(email, password);
        if (!string.IsNullOrEmpty(checkResult))
        {
            error = checkResult;
            return;
        }

        // 2) Если локальная проверка прошла, перенаправляем браузер на наш минимальный API /doLogin
        // передаём email, password и returnUrl
        var url = $"/doLogin?email={Uri.EscapeDataString(email)}" +
                  $"&password={Uri.EscapeDataString(password)}";

        if (!string.IsNullOrEmpty(ReturnUrl))
            url += $"&returnUrl={Uri.EscapeDataString(ReturnUrl)}";

        // Простая навигация, чтобы браузер сделал обычный HTTP-GET на /doLogin
        Navigation.NavigateTo(url, forceLoad: true);
    }
}
