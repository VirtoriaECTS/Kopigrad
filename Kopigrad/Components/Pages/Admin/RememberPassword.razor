
@page "/RememberPassword"
@layout Layout.Menu.MenuAdminVhod
@rendermode InteractiveServer

@using Microsoft.AspNetCore.Components
@inject NavigationManager Navigation
@inject Classes.Autorisation.AutorisationClasses AuthService
@inject Classes.Admin.Servise.MailSender EmailService
@inject IJSRuntime JS

<div class="form-wrapper">
    @if (!isConfirmed)
    {
        <div class="form-group">
            <label class="form-label">Email:</label>
            <div class="form-row">
                <input class="form-input" @bind="email" />
                <button type="button" class="form-button" @onclick="SendCode">Отправить код</button>
            </div>
            <p class="form-label" style="margin-top: 0.5em;">@status</p>
        </div>

        @if (codeSent)
        {
            <div class="form-group">
                <label class="form-label">Код подтверждения:</label>
                <div class="form-row">
                    <input @bind="enteredCode" class="form-input" />
                    <button type="button" class="form-button" @onclick="CheckCode">Подтвердить</button>
                </div>
            </div>
        }
    }
    else
    {
        <div class="form-group">
            <label class="form-label">Новый пароль:</label>
            <input type="password" @bind="password" class="form-input" />
        </div>

        <button @onclick="onClickVhod" class="form-button">Сохранить</button>
    }

    <a href="/Admin" class="form-link">Назад</a>
</div>

<style>
    .form-wrapper {
    margin-top: 5vh;
    width: 90%;
    max-width: 32em; /* ≈512px */
    margin-left: auto;
    margin-right: auto;
    padding: 2em;
    border: 1px solid #ccc;
    border-radius: 0.75em;
    box-shadow: 0 0 1em rgba(0, 0, 0, 0.05);
    background-color: #fff;
}

.form-group {
    margin-bottom: 1.5em;
}

.form-label {
    font-weight: bold;
    margin-bottom: 0.5em;
    display: block;
    font-size: clamp(0.9rem, 1vw, 1.1rem);
}

.form-input {
    width: 100%;
    padding: 0.8em 1em;
    border: 1px solid #999;
    border-radius: 0.5em;
    font-size: clamp(0.9rem, 1vw, 1rem);
    box-sizing: border-box;
}

.form-row {
    display: flex;
    gap: 0.75em;
    align-items: center;
    flex-wrap: wrap;
}

.form-button {
    background-color: #222;
    color: white;
    padding: 0.9em 1.2em;
    border: none;
    border-radius: 0.5em;
    cursor: pointer;
    font-weight: bold;
    transition: background 0.3s ease;
    font-size: clamp(0.9rem, 1vw, 1rem);
    width: 100%;
}

.form-button:hover {
    background-color: #444;
}

.form-link {
    display: block;
    text-align: center;
    margin-top: 1.2em;
    font-weight: bold;
    text-decoration: underline;
    color: #000;
    font-size: clamp(0.85rem, 1vw, 1rem);
}

.success {
    color: green;
    font-weight: bold;
    text-align: center;
    font-size: 1rem;
}

.error {
    color: red;
    font-weight: bold;
    margin-top: 1em;
    text-align: center;
    font-size: 1rem;
}




</style>

@code {
    string email = "";
    string password = "";
    private bool isConfirmed = false;
    private string sentCode;
    private string enteredCode;
    private bool codeSent = false;
    string status = "";
    Classes.Autorisation.AutorisationClasses autorisationClasses = new Classes.Autorisation.AutorisationClasses();
    private async Task SendCode(MouseEventArgs e)
    {


        if (string.IsNullOrWhiteSpace(email))
        {
            status = "Введите email.";
            return;
        }

        // Генерируем код и сохраняем
        var rnd = new Random();
        sentCode = rnd.Next(100000, 999999).ToString();

        try
        {
            await EmailService.SendEmailAsync(email, "Код подтверждения", $"Ваш код: {sentCode}");
            status = "Код отправлен!";
            codeSent = true;

            // Сохраняем в localStorage
            await JS.InvokeVoidAsync("saveState", "email", email);
            await JS.InvokeVoidAsync("saveState", "sentCode", sentCode);
            await JS.InvokeVoidAsync("saveState", "codeSent", "true");
        }
        catch (Exception ex)
        {
            status = $"Ошибка отправки письма: {ex.Message}";
        }
    }


    private void CheckCode()
    {
        if (enteredCode == sentCode)
        {
            isConfirmed = true;
            status = "Email успешно подтверждён!";
        }
        else
        {
            status = "Неверный код.";
        }
    }

    public void onClickVhod()
    {

        autorisationClasses.changePassword(email, password);
        Navigation.NavigateTo("/Admin");
    }

}
