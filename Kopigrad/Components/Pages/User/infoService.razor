@page "/InfoService/{id:int}"
@inject NavigationManager Navigation
@rendermode InteractiveServer
@layout Layout.Menu.MenuUser;


<div class="CenterVertical">
    <head>
        <link rel="stylesheet" href="/users.css">
        <link rel="stylesheet" href="/admin.css">
    </head>
    <div class="Banner">

        <h5 class="TextBanner">@nameBanner</h5>
    </div>



    @foreach (var info in infoMinis)
    {
        <h5 style="font-weight: bold;" class="NameMiniService">@info.nameMiniService</h5>


        <table class="TableBorder">


            @for (int i = 0; i < info.trSum; i++)
            {
                <tr class="TableBorderTr" @key="i">
                    @for (int j = 0; j < info.tdSum; j++)
                    {
                        <td class="TableBorderTd" @key="j">
                            @if (i == 0 && j == 0)
                            {
                                <!-- Левая шапка с двумя данными -->
                                <h5 class="TextTableUser" style="font-weight: bold;">@info.bottomCategory / @info.topCategory</h5>
                            }
                            else if (i == 0 && j > 0)
                            {
                                int indexHeader = (j - 1);
                                <h5 style="font-weight: bold;" class="TextTableUser">@info.headerValues[indexHeader]</h5>

                            }
                            else if (i > 0 && j == 0)
                            {
                                <!-- Выбор материала -->
                                int indexMaterial = (i - 1);
                                <h5 style="font-weight: bold;" class="TextTableUser">
                                    @viewmaterials.FirstOrDefault(x => x.IdMaterial == info.materialIds[indexMaterial])?.NameMaterial
                                </h5>


                               @*  <h5 class="TextTableUser">@viewmaterials.Where(x => x.IdMaterial == info.materialIds[indexMaterial]).Select(x => x.NameMaterial).First().</h5> *@
                            }
                            else if (i > 0 && j > 0)
                            {
                                <!-- Цена -->
                                int indexPriceI = (i - 1);
                                int indexPriceJ = (j - 1);

                                <h5 class="TextTableUser">@info.priceList[indexPriceI][indexPriceJ]</h5>

                            }
                        </td>

                    }

                </tr>
            }
        </table>



    }

    <br />
    <h5 class="TextTableCondition">@((MarkupString)FormattedCondition)</h5>


    <br />
    <h5 class="TextTableCondition">@time</h5>
    <br />

</div>


<div class="user-interface">
    <!-- Колонка с калькулятором -->
    <div class="user-column">
        <h5 class="block-title">Рассчитать стоимость</h5>
        <div class="calculator">
            <label class="field-label">Наименование</label>
            <select class="user-select" @onchange="OnMiniServiceChanged">
                <option disabled selected>Выберите услугу</option>
                @foreach (var name in infoMinis)
                {
                    <option value="@name.idMiniService">@name.nameMiniService</option>
                }
            </select>

            <label class="field-label">@bottomCategory</label>
            <select class="user-select" @onchange="OnMaterialChanged">
                <option value="" disabled selected hidden>-- выберите материал --</option>
                @foreach (var material in selectedMaterials)
                {
                    <option value="@material.IdMaterial">@material.NameMaterial</option>
                }
            </select>

            @if (topCategory != "Тираж")
            {
                <label class="field-label">@topCategory</label>
                <select class="user-select" @onchange="OnHeaderChanged">
                    <option value="" disabled selected hidden>выберите @topCategory</option>
                    @foreach (var header in selectedHeader)
                    {
                        <option value="@header.IdColumnNames">@header.NameColumn</option>
                    }
                </select>
            }

            <label class="field-label">Количество</label>
            <input type="number" @bind="count" class="user-input" />

            <button class="user-button" @onclick="ClickFindAllPrice">Узнать стоимость</button>
            <div class="price-output">@price</div>
        </div>
    </div>

    <!-- Колонка с заявкой -->
    <div class="user-column">
        <h5 class="block-title">Оформить заявку</h5>
        <a href="https://wa.me/79025876697" target="_blank">
            <button class="user-button">Написать на WhatsApp</button>
        </a>
        <button class="user-button" @onclick="ClickRequst">Отправить заявку</button>
        @if (id == 6)
        {
            <button class="user-button" @onclick="ClickGenerate">Конструктор визиток</button>
        }
    </div>
</div>



<style>
    .user-interface {
        display: flex;
        flex-wrap: wrap;
        gap: 40px;
        justify-content: center;
        padding: 30px;
        box-sizing: border-box;
    }

    .user-column {
        flex: 1 1 320px;
        max-width: 400px;
        border: 2px solid black;
        border-radius: 12px;
        padding: 20px;
        box-sizing: border-box;
        background-color: white;
    }

    .block-title {
        font-size: 18px;
        font-weight: bold;
        text-align: center;
        margin-bottom: 20px;
    }

    .field-label {
        font-weight: bold;
        margin-top: 10px;
        margin-bottom: 5px;
        display: block;
    }

    .user-select,
    .user-input {
        width: 100%;
        padding: 10px;
        font-size: 14px;
        border: 1px solid black;
        border-radius: 8px;
        box-sizing: border-box;
        margin-bottom: 10px;
    }

    .user-button {
        width: 100%;
        padding: 12px;
        font-size: 14px;
        font-weight: bold;
        color: white;
        background-color: black;
        border: none;
        border-radius: 999px;
        margin-top: 10px;
        cursor: pointer;
        transition: background-color 0.2s;
    }

        .user-button:hover {
            background-color: #333;
        }

    .price-output {
        margin-top: 10px;
        font-weight: bold;
        text-align: center;
    }


</style>



@code {

    [Parameter]
    public int? id { get; set; }

    string nameBanner = "";


    //калькулятор
    string bottomCategory = "";
    string topCategory = "";
    string selectedMiniServiceName = "";
    List<Models.Material> selectedMaterials = new();
    List<Models.Columnname> selectedHeader = new();


    int idMiniService = -1;
    int idMaterial = -1;
    int idHeader = -1;
    int count = 0;


    string condition = "";
    string time = "";
    public MarkupString FormattedCondition =>
       (MarkupString)(condition?.Replace("\n", "<br>") ?? "");

    List<Classes.Data.InfoMiniServiceData> infoMinis = new List<Classes.Data.InfoMiniServiceData>();

    Models.Service service = new Models.Service();

    List<Models.Material> viewmaterials = new List<Models.Material>();

    decimal price = 0;

    List<decimal> priceList = new List<decimal>();

    void OnMiniServiceChanged(ChangeEventArgs e)
    {
        selectedMaterials.Clear();
        int id = Convert.ToInt32(e.Value.ToString());
        idMiniService = id;

        var info = infoMinis.Where(x => x.idMiniService == id).First();
        List<int> materials = info.materialIds;

        foreach (int material in materials)
        {
            selectedMaterials.Add(viewmaterials.Where(x => x.IdMaterial == material).First());

        }
        selectedMaterials.Distinct();


        Classes.Admin.Servise.ManagmentMiniService managmentMiniService = new Classes.Admin.Servise.ManagmentMiniService();

        selectedHeader = managmentMiniService.GetColums(id);
    }

    void OnMaterialChanged(ChangeEventArgs e)
    {


        idMaterial = Convert.ToInt32(e.Value.ToString());
    }

    void OnHeaderChanged(ChangeEventArgs e)
    {


        idHeader = Convert.ToInt32(e.Value.ToString());
    }

    public void ClickFindAllPrice()
    {
        Classes.All.SearchPrice searchPrice = new Classes.All.SearchPrice();

        @if (topCategory == "Тираж")
        {
            price = searchPrice.priceNotHeader(idMiniService, idMaterial, selectedHeader, count);

        }
        else
        {
            price = searchPrice.priceHeader(idMiniService, idMaterial, idHeader, count);
        }


    }

    protected override void OnInitialized()
    {
        Classes.Admin.Servise.ManagmentServiseClasses managmentServise = new Classes.Admin.Servise.ManagmentServiseClasses();
        Classes.Admin.Servise.ManagerMaterial managerMaterial = new Classes.Admin.Servise.ManagerMaterial();
        Classes.Admin.Servise.ManagmentMiniService managmentMiniService = new Classes.Admin.Servise.ManagmentMiniService();

        viewmaterials = managerMaterial.GetList();


        service = managmentServise.Find(Convert.ToInt32(id));
        int idService = service.IdService;
        string nameBanner = service.NameService;
        condition = service.ConditionText;
        time = service.Time;


        var miniServices = managmentMiniService.GetMiniServices(idService);
        nameBanner = managmentServise.GetName(idService);
        bottomCategory = miniServices.Select(x => x.BottomName).First();
        topCategory = miniServices.Select(x => x.TopName).First();

        foreach (var oneService in miniServices)
        {
            Classes.Data.InfoMiniServiceData infoMiniServiceData = new Classes.Data.InfoMiniServiceData(
                oneService.IdMiniService,
                oneService.NameMiniServise,
                oneService.TopName,
                oneService.BottomName,
                managmentMiniService.GetNameColums(oneService.IdMiniService),
                managmentMiniService.GetMaterial(oneService.IdMiniService).Select(x => x.IdMaterial).Distinct().ToList()

            );

            int headerCount = infoMiniServiceData.headerValues.Count;


            infoMiniServiceData.priceList = managmentMiniService.GetPrice(oneService.IdMiniService, headerCount);
            int priceListCount = infoMiniServiceData.priceList.Count;
            infoMiniServiceData.trSum = priceListCount + 1;
            infoMiniServiceData.tdSum = headerCount + 1;

            infoMinis.Add(infoMiniServiceData);



        }



    }


    async Task ClickRequst()
    {
        Navigation.NavigateTo($"/CreateRequest");
        await Task.CompletedTask;
    }

    async Task ClickGenerate()
    {
        Navigation.NavigateTo($"/businesscard");
        await Task.CompletedTask;
    }

    async Task ClickExit()
    {
        Navigation.NavigateTo($"/AddInfoService/{Convert.ToInt32(id)}");
        await Task.CompletedTask;
    }




}
